---
- name: Configure server
  hosts: servers
  gather_facts: true
  # vars_files: "{{ secrets_path }}/ansible/tailscale.yaml"
  tasks:
    # To get system time run: timedatectl
    # To get hardware time run: sudo hwclock --show
    - name: Configure time settings
      become: true
      block:
        - name: Set local timezone
          community.general.timezone:
            name: Asia/Kolkata
            hwclock: UTC # hardware clock should always be in UTC
        - name: Start time synchronization service (chronyd)
          when: ansible_distribution == "Amazon"
          ansible.builtin.service:
            name: chronyd
            state: started
            enabled: true
        - name: Start time synchronization service (ntpd)
          when: ansible_distribution != "Amazon"
          ansible.builtin.service:
            name: ntpd
            state: started
            enabled: true
        - name: Reboot the machine for the changes to take effect
          ansible.builtin.reboot:

    - name: Setup docker
      become: true
      block:
        - name: Start docker service
          ansible.builtin.service:
            name: docker
            state: started
            enabled: true
        - name: Add user to docker group
          ansible.builtin.user:
            name: "{{ ansible_user }}"
            groups: docker
            append: true

    - name: Setup git
      block:
        - name: Setup git ssh key and config
          ansible.builtin.copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            mode: "600"
            force: true
          loop:
            - src: "{{ secrets_path }}/github/key_ed25519"
              dest: ~/.ssh/github_key_ed25519
            - src: "{{ configs_path }}/ssh/config"
              dest: ~/.ssh/config
        - name: Set github configuration
          ansible.builtin.copy:
            src: "{{ configs_path }}/github/config"
            dest: ~/.gitconfig
            mode: "664"
            force: true

    - name: Setup crontab
      become: true
      block:
        - name: Create log directory
          ansible.builtin.file:
            path: /var/log/cron
            state: directory
            mode: u=rwx,g=rx,o=
            owner: ec2-user
        - name: Start crontab service
          ansible.builtin.service:
            name: crond
            state: started
            enabled: true

    # simply clone the repo
    - name: Setup codebase
      block:
        - name: Clone latest codebase
          ansible.builtin.git:
            repo: git@github.com:StarryFire/desi_engineer.git
            dest: ~/desi_engineer
            version: main
            update: true

    - name: Copy secrets
      ansible.builtin.include_tasks: ./copy_secrets.yaml

    - name: Setup cronjobs
      block:
        - name: Setup deploy on reboot cronjob
          ansible.builtin.cron:
            name: Deploy latest code on every reboot
            special_time: reboot
            # ref: https://stackoverflow.com/questions/52200878/crontab-journalctl-extra-messages
            job: >
              cd ~/desi_engineer
              && make run cmd="deploy -f" 2>&1
              | tee >(while read line; do echo "[$(date -Iseconds)] $line" >> /var/log/cron/reboot-cron.log; done;) >(systemd-cat -t reboot-cron)

    - name: Set ~/.bash_custom
      ansible.builtin.copy:
        src: "{{ configs_path }}/ansible_push/.bash_custom"
        dest: ~/.bash_custom
        mode: u=rw,g=r,o=r
        force: true
    - name: Set ~/.bash_login
      ansible.builtin.copy:
        src: "{{ configs_path }}/ansible_push/.bash_login"
        dest: ~/.profile
        mode: u=rw,g=r,o=r
        force: true

    - name: Append entry point for .bash_custom to .bashrc
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: "source ~/.bash_custom"
        insertafter: EOF

    - name: Append entry point for .bash_login to .bash_profile
      ansible.builtin.lineinfile:
        path: ~/.bash_profile
        line: "source ~/.bash_login"
        insertafter: EOF
#  - name: Start nginx service
#     become: true
#     ansible.builtin.service:
#       name: nginx
#       state: started
#       enabled: true

#   - name: Create certbot certificates and auto-renew cronjob
#     become: true
#     ansible.builtin.command:
#       # Add --staging for testing
#       cmd: >
#         certbot certonly -n
#         --nginx --email desiengineer.dev@gmail.com
#         -d desiengineer.dev -d www.desiengineer.dev
#         --no-eff-email --agree-tos
#       creates: /etc/letsencrypt/live/desiengineer.dev/fullchain.pem
#   - name: Setup tailscale
#     become: true
#     block:
#       - name: Start tailscale service
#         ansible.builtin.service:
#           name: tailscaled
#           state: started
#           enabled: true
#       # Make sure to disable key expiry for the server: https://tailscale.com/kb/1028/key-expiry
#       # Make sure to remove in case you disconnect from tailscale: /var/lib/tailscale/tailscaled.state
#       - name: Connect to tailscale
#         # no_log: true
#         ansible.builtin.command:
#           cmd: tailscale up --authkey {{ tailscale_auth_key }} --hostname {{ tailscale_hostname }}
#           creates: /var/lib/tailscale/tailscaled.state

# - name: Setup ansible
#   hosts: servers
#   tasks:
#     - name: Setup config
#       ansible.builtin.copy:
#         src: "{{ configs_path }}/ansible_pull/ansible.cfg"
#         dest: "~/.ansible.cfg"
#         mode: "600"
#     - name: Setup reboot cronjob
#       ansible.builtin.cron:
#         name: Runs ansible-pull on every reboot
#         special_time: reboot
#         job: "{{ deploy_command }}"
