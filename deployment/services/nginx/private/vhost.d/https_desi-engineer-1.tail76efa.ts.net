# NOTE: When using nginx-proxy/nginx-proxy, the upstream name of the container is: ${VIRTUAL_HOST_HASH}-${VIRTUAL_PATH_HASH}
# HASH can be calculated using: echo -n "desi-engineer-1.tail76efa.ts.net" | sha1sum | awk '{ print $1 }'
# Here,
# desi-engineer-1.tail76efa.ts.net = 451f649f0328cbed40441596b6d547b7a044563a
# /grafana/ = 766c9ed8d1bbef4ee7e57b9caefe3fece8812e78
#####################################################################################################################################################################
#####################################################################################################################################################################
# by default, Nginx will serve regular expression matches in preference to prefix matches.
# However, it evaluates prefix locations first, allowing for the administer to
# override this tendency by specifying locations using the = and ^~ modifiers.
# Reference: https://www.digitalocean.com/community/tutorials/understanding-nginx-server-and-location-block-selection-algorithms

location /auth {
    internal;

    proxy_pass_request_body off;
    proxy_set_header Host $http_host;
    proxy_set_header Remote-Addr $remote_addr;
    proxy_set_header Remote-Port $remote_port;
    proxy_set_header Original-URI $request_uri;

    proxy_pass http://unix:/run/tailscale.nginx-auth/tailscale.nginx-auth.sock;
}

# Ref: https://stackoverflow.com/a/67127911/5872905
# Uncomment the following in order to debug what headers are being passed to proxy
# To see the debug logs run: dc_show_nginx_upstream_requests
#
# using mirror in server context
# mirror /mirror;
# mirror_request_body off;
# location /mirror {
#     # Use internal so that location is not available for direct requests
#     internal;
#     # Use small timeout not to wait for replies (this is not necessary)
#     proxy_read_timeout 1;

#     auth_request /auth;
#     auth_request_set $auth_user $upstream_http_tailscale_user;
#     auth_request_set $auth_name $upstream_http_tailscale_name;
#     auth_request_set $auth_login $upstream_http_tailscale_login;
#     auth_request_set $auth_tailnet $upstream_http_tailscale_tailnet;
#     auth_request_set $auth_profile_picture $upstream_http_tailscale_profile_picture;
#     include /etc/nginx/configs/generic_location_headers.conf;
#     proxy_set_header X-Webauth-User $auth_user;
#     proxy_set_header X-Webauth-Name $auth_name;
#     proxy_set_header X-Webauth-Login $auth_login;
#     proxy_set_header X-Webauth-Tailnet $auth_tailnet;
#     proxy_set_header X-Webauth-Profile-Picture $auth_profile_picture;
#     proxy_set_header X-Custom-Proxy-Header "mirror";
#     # set $upstream_keepalive true;
#     # Pass headers to logging server
#     proxy_pass http://127.0.0.1:6677;
# }
location / {
    include /etc/nginx/configs/generic_location_headers.conf;

    auth_request /auth;
    auth_request_set $auth_user $upstream_http_tailscale_user;
    auth_request_set $auth_name $upstream_http_tailscale_name;
    auth_request_set $auth_login $upstream_http_tailscale_login;
    auth_request_set $auth_tailnet $upstream_http_tailscale_tailnet;
    auth_request_set $auth_profile_picture $upstream_http_tailscale_profile_picture;
    proxy_set_header X-Webauth-User $auth_user;
    proxy_set_header X-Webauth-Name $auth_name;
    proxy_set_header X-Webauth-Login $auth_login;
    proxy_set_header X-Webauth-Tailnet $auth_tailnet;
    proxy_set_header X-Webauth-Profile-Picture $auth_profile_picture;

    access_log /var/log/nginx/access.log tailscale_log_format;

    proxy_pass http://451f649f0328cbed40441596b6d547b7a044563a-42099b4af021e53fd8fd4e056c2568d7c2e3ffa8;
}
